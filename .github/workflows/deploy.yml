name: Deploy and Test Laravel Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Admin123!
          MYSQL_DATABASE: twitterclone
          MYSQL_USER: admin
          MYSQL_PASSWORD: Admin123!
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -P 3306 --silent"
          --health-interval=5s --health-timeout=5s --health-retries=20

    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: twitterclone
      DB_USERNAME: admin
      DB_PASSWORD: Admin123!

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo_mysql, tokenizer, xml, curl, bcmath
          coverage: none

      - name: Prepare .env & APP_KEY
        run: |
          cp .env.example .env || true
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Install Composer deps
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Wait for MySQL
        shell: bash
        run: |
          echo "Waiting for MySQL on $DB_HOST:$DB_PORT ..."
          for i in $(seq 1 60); do
            if mysqladmin ping --protocol=TCP -h"$DB_HOST" -P"$DB_PORT" -u"$DB_USERNAME" -p"$DB_PASSWORD" --silent; then
              echo "MySQL is ready."
              exit 0
            fi
            echo "Still waiting... ($i/60)"
            sleep 2
          done
          echo "MySQL not ready in time" >&2
          exit 1

      - name: Cache config
        run: php artisan config:cache

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run Unit tests
        run: php artisan test --testsuite=Unit --verbose

      - name: Run Feature tests
        run: php artisan test --testsuite=Feature --verbose

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: pdo_mysql

      - name: Prepare .env & APP_KEY
        run: |
          cp .env.example .env || true
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Install Composer (prod)
        run: composer install --no-interaction --prefer-dist --no-progress --no-dev --optimize-autoloader

      - name: Cache config
        run: php artisan config:cache

      - name: Deploy Application
        run: echo "Deploying the application to the production server"
